;; Auto-generated. Do not edit!


(when (boundp 'tm_motion::ActionFeedback)
  (if (not (find-package "TM_MOTION"))
    (make-package "TM_MOTION"))
  (shadow 'ActionFeedback (find-package "TM_MOTION")))
(unless (find-package "TM_MOTION::ACTIONFEEDBACK")
  (make-package "TM_MOTION::ACTIONFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude ActionFeedback.msg.html


(defclass tm_motion::ActionFeedback
  :super ros::object
  :slots (_received_data ))

(defmethod tm_motion::ActionFeedback
  (:init
   (&key
    ((:received_data __received_data) "")
    )
   (send-super :init)
   (setq _received_data (string __received_data))
   self)
  (:received_data
   (&optional __received_data)
   (if __received_data (setq _received_data __received_data)) _received_data)
  (:serialization-length
   ()
   (+
    ;; string _received_data
    4 (length _received_data)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _received_data
       (write-long (length _received_data) s) (princ _received_data s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _received_data
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _received_data (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get tm_motion::ActionFeedback :md5sum-) "0db3bc19eeede9e4ee493e93f03da761")
(setf (get tm_motion::ActionFeedback :datatype-) "tm_motion/ActionFeedback")
(setf (get tm_motion::ActionFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Feedback
string received_data


")



(provide :tm_motion/ActionFeedback "0db3bc19eeede9e4ee493e93f03da761")


